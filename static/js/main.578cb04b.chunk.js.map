{"version":3,"sources":["components/Grid.js","components/DimensionSelector.js","components/Palette.js","components/Settings.js","App.js","index.js"],"names":["Pixel","color","className","draw","onMouseDown","event","target","style","backgroundColor","Grid","dimensions","showGrid","Array","height","map","_","i","width","Input","value","onChange","type","min","max","step","DimensionSelector","newDimensions","onSubmit","changeHeight","changeWidth","Color","onClick","id","Palette","colors","j","Button","text","Settings","setShowGrid","setColors","changeExistingColor","randHex","hex","Math","floor","random","toString","length","document","querySelectorAll","forEach","pixel","R1","fill","R2","R3","App","useState","setId","setColor","setDimensions","setNewDimensions","getElementById","preventDefault","parseInt","toHex","x","replace","rgb","split","rrggbb","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.578cb04b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './components.css'\r\n\r\nconst Pixel = ({color, className, draw}) => {\r\n  return(\r\n    <div \r\n      className={className} \r\n      onMouseDown={(event) => {\r\n        event.target.style.backgroundColor = color\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst Grid = ({dimensions, color, showGrid, draw}) => {\r\n  return(\r\n    <div className='gridArea'>\r\n      <table className={showGrid? 'grid': 'noGrid'}>\r\n        <tbody>\r\n          {[...Array(dimensions.height)].map((_, i) => \r\n            <tr key={`row ${i}`}>\r\n              {[...Array(dimensions.width)].map((_, i) => \r\n                <td key={`column ${i}`}>\r\n                  <Pixel \r\n                    color={color}\r\n                    className={showGrid? 'pixel': 'pixelNoGrid'}\r\n                  />\r\n                </td>\r\n              )}\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid","import React from 'react'\r\nimport './components.css'\r\n\r\nconst Input = ({value, onChange}) => {\r\n  return(    \r\n    <input \r\n      type='number'\r\n      min='1'\r\n      max='32'\r\n      step='1'\r\n      className='input'\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  )\r\n}\r\n  \r\nconst DimensionSelector = ({newDimensions, onSubmit, changeHeight, changeWidth}) => {\r\n  return(\r\n    <form onSubmit={onSubmit}>\r\n      <button \r\n        type='submit'\r\n        className='button'  \r\n      >\r\n        Change Dimensions\r\n      </button>\r\n      <Input \r\n        value={newDimensions.height} \r\n        onChange={changeHeight}\r\n      />\r\n      <Input \r\n        value={newDimensions.width} \r\n        onChange={changeWidth}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default DimensionSelector","import React from 'react'\r\nimport './components.css'\r\n\r\nconst Color = ({color, onClick, id}) => {\r\n  return(\r\n    <td  \r\n      className='color'\r\n      style={{backgroundColor: color}}\r\n      onClick={onClick}\r\n      id={id}\r\n    />\r\n  )\r\n}\r\n\r\nconst Palette = ({onClick, colors}) => {\r\n  return(\r\n    <div className='Palette'>\r\n      <table className='colors'>\r\n        <tbody>\r\n          {colors.map((colors, i) => \r\n            <tr key={`pallete row ${i}`}>\r\n              {colors.map((color, j) =>\r\n                <Color\r\n                  key={`color ${i}${j}`}\r\n                  color={color}\r\n                  id={`color ${i}${j}`}\r\n                  onClick={onClick}\r\n                />\r\n              )}\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Palette\r\n","import React from 'react'\r\nimport './components.css'\r\n\r\nconst Input = ({value, onChange, color}) => {\r\n  return(\r\n    <input\r\n      className='colorSelector'\r\n      type='color'\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  )\r\n}\r\n\r\nconst Button = ({onClick, text}) => {\r\n  return(\r\n    <div>\r\n      <button \r\n        className='button'\r\n        onClick={onClick} \r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Settings = ({showGrid, setShowGrid, color, setColors, changeExistingColor}) => {\r\n  const randHex = () => {\r\n    let hex = Math.floor(Math.random() * 256).toString(16)    \r\n    return hex.length < 2?\r\n      `0${hex}`:\r\n      hex\r\n  }\r\n  \r\n  return(\r\n    <div className='settings'>\r\n      <Button\r\n        text={'Toggle Grid'}\r\n        onClick={() => setShowGrid(!showGrid)}\r\n      />\r\n      <Button\r\n        text={'Clear Grid'}\r\n        onClick={() => {\r\n          let pixels = showGrid?\r\n            document.querySelectorAll('.pixel'):\r\n            document.querySelectorAll('.pixelNoGrid')\r\n\r\n          pixels.forEach(pixel => \r\n            pixel.style.backgroundColor = '#414141'\r\n          )\r\n        }}\r\n      />  \r\n      <Button\r\n        text={'Randomize Palette'}\r\n        onClick={() => {\r\n          let R1 = new Array(8).fill(0).map(_ =>\r\n            `#${randHex()}${randHex()}${randHex()}`\r\n          )\r\n          let R2 = new Array(8).fill(0).map(_ =>\r\n            `#${randHex()}${randHex()}${randHex()}`\r\n          )\r\n          let R3 = new Array(8).fill(0).map(_ =>\r\n            `#${randHex()}${randHex()}${randHex()}`\r\n          )\r\n      \r\n          setColors(([R1, R2, R3]))\r\n        }}\r\n      />\r\n      <Input\r\n        value={color}\r\n        onChange={changeExistingColor}\r\n      />\r\n      Color Selector\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import {React, useState} from 'react'\nimport Grid from './components/Grid'\nimport DimensionSelector from './components/DimensionSelector'\nimport Palette from './components/Palette'\nimport Settings from './components/Settings'\n\nconst App = () => {\n  const [id, setId] = useState('color 11')\n  const [color, setColor] = useState('#FFFFFF')\n  const [dimensions, setDimensions] = useState({height: 16, width: 16})\n  const [newDimensions, setNewDimensions] = useState({height: 1, width: 1})\n  const [showGrid, setShowGrid] = useState(true)\n  const [colors, setColors] = useState([\n    ['#FF0000','#FF5500','#FFFF00','#00FF00','#0000FF','#5500FF','#FF00FF','#FFFFFF'],\n    ['#990000','#993300','#999900','#009900','#000099','#330099','#990099','#999999'],\n    ['#660000','#661100','#666600','#006600','#000066','#110066','#660066','#666666']\n  ])\n\n  const changeDimensions = (event) => {\n    event.preventDefault()\n    setDimensions(newDimensions)\n  }\n\n  const changeHeight = (event) => {\n    setNewDimensions({\n      height: parseInt(event.target.value),\n      width: newDimensions.width\n    })\n  }\n\n  const changeWidth = (event) => {\n    setNewDimensions({\n      height: newDimensions.height,\n      width: parseInt(event.target.value)\n    })\n  }\n\n  const changeColor = (event) => {\n    const toHex = (x) => parseInt(x.replace(/\\D/g, '')).toString(16)\n    let rgb = event.target.style.backgroundColor.split(',').map(x =>\n      toHex(x).length < 2? \n        `0${toHex(x)}`:\n        toHex(x)\n    )\n\n    let rrggbb = `#${rgb[0]}${rgb[1]}${rgb[2]}` \n    setId(event.target.id)\n    setColor(rrggbb)\n  }\n\n  const changeExistingColor = (event) => {\n\n    setColor(event.target.value)\n    document.getElementById(id).style.backgroundColor = event.target.value\n  }\n\n  return(\n    <div className='App'>\n\n      <div className='title'>\n        <h1> Pixel Art </h1>\n        <h5> By: Jake Marion </h5>\n      </div>\n\n      <div className='container'>\n        <Grid \n          dimensions={dimensions} \n          color={color} \n          showGrid={showGrid}\n        />\n        <Settings \n          showGrid={showGrid}\n          setShowGrid={setShowGrid}\n          setColors={setColors}\n          color={color}\n          changeExistingColor={changeExistingColor}\n        />\n      </div>\n\n      <DimensionSelector\n        newDimensions={newDimensions}\n        onSubmit={changeDimensions}\n        changeHeight={changeHeight}\n        changeWidth={changeWidth}\n      />\n\n      <div style={{width: '100%'}}>\n        <Palette\n          colors={colors}\n          onClick={changeColor}\n          setId={setId}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}