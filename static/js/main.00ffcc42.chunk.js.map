{"version":3,"sources":["components/Grid.js","components/DimensionSelector.js","components/Palette.js","App.js","index.js"],"names":["Pixel","color","className","onMouseDown","event","target","style","backgroundColor","Grid","dimensions","Array","height","map","_","i","width","Input","value","onChange","type","min","max","step","DimensionSelector","newDimensions","onSubmit","heightChange","widthChange","Color","onClick","id","Palette","changeExistingColor","newColor","App","useState","setId","setColor","setDimensions","setNewDimensions","preventDefault","parseInt","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.00ffcc42.chunk.js","sourcesContent":["import React from 'react'\r\nimport './components.css'\r\n\r\nconst Pixel = ({color}) => {\r\n  return(\r\n    <div \r\n      className='pixel' \r\n      onMouseDown={(event) => {\r\n        event.target.style.backgroundColor = color\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst Grid = ({dimensions, color}) => {\r\n  return(\r\n    <div>\r\n      <table className='grid'>\r\n        <tbody>\r\n          {[...Array(dimensions.height)].map((_, i) => \r\n            <tr key={`row ${i}`}>\r\n              {[...Array(dimensions.width)].map((_, i) => \r\n                <td key={`column ${i}`}>\r\n                  <Pixel \r\n                    color={color} \r\n                  />\r\n                </td>\r\n              )}\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid","import React from 'react'\r\nimport './components.css'\r\n\r\nconst Input = ({value, onChange}) => {\r\n  return(    \r\n    <input \r\n      type='number'\r\n      min='1'\r\n      max='32'\r\n      step='1'\r\n      className='input'\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  )\r\n}\r\n  \r\nconst DimensionSelector = ({newDimensions, onSubmit, heightChange, widthChange}) => {\r\n  return(\r\n    <form onSubmit={onSubmit}>\r\n      <Input \r\n        value={newDimensions.height} \r\n        onChange={heightChange}  \r\n      />\r\n      <Input \r\n        value={newDimensions.width} \r\n        onChange={widthChange}\r\n      />\r\n      <button type='submit'>\r\n        change dimensions\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default DimensionSelector","import React from 'react'\r\nimport './components.css'\r\n\r\nconst Input = ({value, onChange}) => {\r\n  return(\r\n    <input\r\n      type='color'\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  )\r\n}\r\n\r\nconst Color = ({color, onClick, id}) => {\r\n  return(\r\n    <div  \r\n      className='color'\r\n      style={{backgroundColor: color}}\r\n      onClick={onClick}\r\n      id={id}\r\n    />\r\n  )\r\n}\r\n\r\nconst Palette = ({onClick, changeExistingColor, newColor}) => {\r\n  let colors = [\r\n    '#3e4444',\r\n    '#82b74b',\r\n    '#405d27',\r\n    '#c1946a'\r\n  ]\r\n  \r\n  return(\r\n    <div>\r\n      {colors.map((color, i) => \r\n        <Color\r\n          key={color}\r\n          color={color}\r\n          id={`color ${i}`}\r\n          onClick={onClick}\r\n        />\r\n      )}\r\n\r\n      <Input\r\n        value={newColor}\r\n        onChange={changeExistingColor}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Palette\r\n","import {React, useState} from 'react'\nimport Grid from './components/Grid'\nimport DimensionSelector from './components/DimensionSelector'\nimport Palette from './components/Palette'\n\nconst App = () => {\n  const [id, setId] = useState('color 1')\n  const [color, setColor] = useState('#FFFFFF')\n  const [dimensions, setDimensions] = useState({height: 16, width: 16})\n  const [newDimensions, setNewDimensions] = useState({height: 1, width: 1})\n\n  const changeDimensions = (event) => {\n    event.preventDefault()\n    setDimensions(newDimensions)\n  }\n\n  const changeHeight = (event) => {\n    setNewDimensions({\n      height: parseInt(event.target.value),\n      width: newDimensions.width\n    })\n  }\n\n  const changeWidth = (event) => {\n    setNewDimensions({\n      height: newDimensions.height,\n      width: parseInt(event.target.value)\n    })\n  }\n\n  const changeColor = (event) => {\n    setId(event.target.id)\n    setColor(event.target.style.backgroundColor)\n  }\n\n  const changeExistingColor = (event) => {\n    setColor(event.target.value)\n    document.getElementById(id).style.backgroundColor = event.target.value\n  }\n\n  return(\n    <div>\n      <Grid \n        dimensions={dimensions} \n        color={color} \n      />\n      <DimensionSelector\n        newDimensions={newDimensions}\n        onSubmit={changeDimensions}\n        heightChange={changeHeight}\n        widthChange={changeWidth}\n      />\n      <Palette\n        newColor={color}\n        onClick={changeColor}\n        setId={setId}\n        changeExistingColor={changeExistingColor}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}